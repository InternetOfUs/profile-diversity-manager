# syntax=docker/dockerfile:experimental
FROM tiangolo/uvicorn-gunicorn-fastapi:python3.8-slim

ARG DEFAULT_HOST="0.0.0.0"
ARG DEFAULT_PORT=80
ARG DEFAULT_LOG_LEVEL=info
ARG DEFAULT_MAX_EXECUTOR_WORKERS=4

ENV DEBIAN_FRONTEND=noninteractive
ENV HOST=${DEFAULT_HOST}
ENV PORT=${DEFAULT_PORT}
ENV LOG_LEVEL=${DEFAULT_LOG_LEVEL}
ENV MAX_EXECUTOR_WORKERS=${DEFAULT_MAX_EXECUTOR_WORKERS}

WORKDIR /dependencies

# Install compilation resources
ENV DEBIAN_FRONTEND=noninteractive
RUN --mount=type=cache,id=apt-debian-stable,target=/var/cache/apt apt-get -y update -qq --fix-missing
RUN --mount=type=cache,id=apt-debian-stable,target=/var/cache/apt apt-get install -qq -y unzip build-essential locales locales cmake libicu-dev libboost-regex-dev libboost-system-dev libboost-program-options-dev libboost-thread-dev libboost-filesystem-dev zlib1g-dev swig python3-dev
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
RUN dpkg-reconfigure --frontend=noninteractive locales
RUN update-locale LANG=en_US.UTF-8

# Install FreeLing 4.2
ADD https://github.com/TALP-UPC/FreeLing/releases/download/4.2/FreeLing-src-4.2.tar.gz .
RUN tar zxvf FreeLing-src-4.2.tar.gz
ADD https://github.com/TALP-UPC/FreeLing/releases/download/4.2/FreeLing-langs-src-4.2.tar.gz .
RUN tar zxvf FreeLing-langs-src-4.2.tar.gz
RUN cd FreeLing-4.2 && mkdir -p build && cd build && cmake -DPYTHON3_API=ON .. && make -j$(nproc) && make -j$(nproc) install
RUN rm -rf FreeLing-4.2 *tar.gz
ENV PYTHONPATH=/usr/local/share/freeling/APIs/python3:$PYTHONPATH

# Install python dependencies
COPY docker/requirements.txt .
RUN pip install -r requirements.txt

# Install NLTK
RUN python -m nltk.downloader -q all
COPY docker/mon.zip /root/nltk_data/corpora/omw/.
RUN unzip /root/nltk_data/corpora/omw/mon.zip -d /root/nltk_data/corpora/omw
COPY docker/chinese /root/nltk_data/corpora/stopwords/chinese
RUN rm /root/nltk_data/corpora/omw/mon.zip

# Get autogenerated model to detect language
ADD https://dl.fbaipublicfiles.com/fasttext/supervised-models/lid.176.bin .
ENV FASTTEXT_PRETRAINED_MODEL_PATH="/dependencies/lid.176.bin"

# Clean compilation resources
RUN --mount=type=cache,id=apt-debian-stable,target=/var/cache/apt apt-get --purge -y remove unzip build-essential libicu-dev libboost-regex-dev libboost-system-dev libboost-program-options-dev libboost-thread-dev libboost-filesystem-dev zlib1g-dev cmake wget swig python3-dev
RUN --mount=type=cache,id=apt-debian-stable,target=/var/cache/apt apt-get clean -y
RUN rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY ./app /app
